{% set chartIdRandomized = 'linechart' ~ random() %}

<figure id="{{ chartIdRandomized }}" height="450" style="height: 450px;">
  <canvas width="400" height="400" style="height: 400px;"></canvas>
  <figcaption></figcaption>
</figure>

<script>
  (function() {

    function createGraph() {
      var formatData = function(data) {
          var formatted = [], key;
          for (key in data) {
            if (key > 0) {
              formatted[key-1] = data[key] ? data[key].toFixed(2) : null;
            }
          }
          return formatted;
        },
        data = {
          labels: (function(years) {
            var currentYear = (new Date()).getFullYear();
            return years.map(function(y) {
              return y - 1 + currentYear;
            });
          }({{ entity.cashFlow['cash flow'] | keys | json_encode | raw }})),
          datasets: [ {
            label: {{ 'Besparelse' | trans | json_encode | raw }},
            strokeColor: 'rgb(116, 118, 108)',
            pointColor: 'rgb(116, 118, 108)',
            pointStrokeColor: 'rgb(116, 118, 108)',
            pointHighlightFill: '#fff',
            pointHighlightStroke: 'rgb(116, 118, 108)',
            data: formatData({{ entity.cashFlow['besparelse'] | json_encode | raw }})
          }, {
            label: {{ 'Ydelse, lån inkl. fællesomkostninger' | trans | json_encode | raw }},
            strokeColor: 'rgb(167, 203, 17)',
            pointColor: 'rgb(167, 203, 17)',
            pointStrokeColor: 'rgb(167, 203, 17)',
            pointHighlightFill: '#fff',
            pointHighlightStroke: 'rgb(167, 203, 17)',
            data: formatData({{ entity.cashFlow['ydelse laan inkl. faellesomkostninger'] | json_encode | raw }})
          } ]
        },
        options = {
          datasetStrokeWidth: 3,
          pointDotRadius : 2,
          scaleGridLineColor: 'rgb(0, 0, 0)',
          scaleShowVerticalLines: false,
          animation: !true,
          responsive: true,
          maintainAspectRatio: false,
          datasetFill: false,
          bezierCurve : true,
          bezierCurveTension : 0.2
        },
        ctx = document.querySelector('#{{ chartIdRandomized }} canvas').getContext('2d'),
        chart = new Chart(ctx).Line(data, options);
      document.querySelector('#{{ chartIdRandomized }} figcaption').innerHTML = chart.generateLegend();
    }

    // Run on load.
    createGraph();

    // Before we can listen for jQuery events, we need the DOM to
    // be fully loaded.
    document.addEventListener('DOMContentLoaded', function(e) {

      // Event listener for jQuery.
      jQuery('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
        createGraph();
      });
    });
  }())
</script>
