<?php
/**
 * @file
 * @TODO: Missing description.
 */

namespace AppBundle\Entity;

use Doctrine\ORM\EntityRepository;
use AppBundle\DBAL\Types\PrimaerEnterpriseType;

/**
 * TiltagRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TiltagRepository extends EntityRepository
{
    /**
     * Create a new Tiltag based on type
     *
     * @param string $type
     * @return Tiltag
     */
    public function create($type)
    {
        $type = ucwords($type);
        $className = '\\AppBundle\\Entity\\' . $type . 'Tiltag';

        if (!class_exists($className)) {
            throw new \InvalidArgumentException('Unknown tiltag type: ' . $type);
        }

        $tiltag = new $className();

        switch ($type) {
            case 'Solcelle':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::VE);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Solceller'));
                break;
            case 'Tekniskisolering':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::VVS);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Varmeanlæg - generelt'));
                break;
            case 'Belysning':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::EL);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Belysning'));
                break;
            case 'Klimaskaerm':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::TOEMRER_ISOLATOER);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Klimaskærm'));
                break;
            case 'Nyklimaskaerm':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::TOEMRER_ISOLATOER);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('NyKlimaskærm'));
                break;
            case 'Pumpe':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::VVS);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Pumper'));
                break;
            case 'Vindue':
                $tiltag->setPrimaerEnterprise(PrimaerEnterpriseType::TOEMRER);
                $tiltag->setTiltagskategori($this->getTiltagskategoriByName('Vinduer, ovenlys, døre'));
                break;
        }

        return $tiltag;
    }

    /**
     * Get the tiltags list
     *
     * @param $class
     * @param Rapport $rapport
     *
     * @return array
     */
    public function getTiltags($class = NULL, $rapport = NULL)
    {
        $qb = $this->_em->createQueryBuilder();
        $qb->select('t')
            ->from('AppBundle\Entity\Tiltag', 't')
            ->where('1 = 1');
        if (!empty($class) && class_exists($class)) {
            $qb->where('t INSTANCE OF ' . $class);
        }
        if (!empty($rapport)) {
            $qb->andWhere('t.rapport IN (:rapport)')
                ->setParameter('rapport', $rapport);
        }
        $query = $qb->getQuery();
        return $query->getResult();
    }

    private function getTiltagskategoriByName($name)
    {
        return $this->_em->getRepository('AppBundle:Tiltagskategori')->findOneBy(array('navn' => $name));
    }

}
